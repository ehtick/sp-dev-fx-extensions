// Modern Fluent UI v9 styles - minimal SCSS since most styling is in makeStyles
// This file provides fallback styles and CSS module classes

// Enhanced animation keyframes
@keyframes modernSlideIn {
  from {
    opacity: 0;
    transform: translateY(-8px) scale(0.98);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes modernFadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes criticalAttention {
  0%, 100% {
    transform: scale(1);
    box-shadow: 0 4px 12px rgba(232, 17, 35, 0.15);
  }
  50% {
    transform: scale(1.002);
    box-shadow: 0 8px 24px rgba(232, 17, 35, 0.25);
  }
}

// Global animation classes for Fluent UI components
:global(.modern-alert-enter) {
  animation: modernSlideIn 0.4s cubic-bezier(0.16, 1, 0.3, 1);
}

:global(.modern-alert-fade) {
  animation: modernFadeIn 0.3s ease-out;
}

:global(.critical-attention) {
  animation: criticalAttention 3s ease-in-out infinite;
}

// Global icon fixes for Fluent UI v9
:global(svg) {
  display: inline-block !important;
  vertical-align: middle;
}

// Ensure all Fluent UI icons are visible
:global([data-icon-name]) {
  display: inline-flex !important;
  align-items: center;
  justify-content: center;
}

// Fix for Fluent UI React Components buttons
:global(.fui-Button) {
  svg {
    display: inline-block !important;
    width: 1em;
    height: 1em;
  }
}

// Fallback styles for legacy support
.alertItem {
  width: 100%;
  margin: 0;
  
  // Ensure proper stacking context
  position: relative;
  z-index: 1;
}


// Responsive enhancements
@media (max-width: 768px) {
  :global(.modern-alert-enter) {
    animation: modernFadeIn 0.2s ease-out;
  }
  
  .alertItem {
    margin-bottom: 12px;
  }
}

// Accessibility and motion preferences
@media (prefers-reduced-motion: reduce) {
  :global(.modern-alert-enter),
  :global(.modern-alert-fade),
  :global(.critical-attention) {
    animation: none;
  }
}

@media (prefers-contrast: high) {
  :global(.critical-attention) {
    animation: none;
  }
}


// Core layout styles used by the component
.headerRow {
  display: flex;
  align-items: flex-start;
  width: 100%;
  justify-content: space-between;
  min-height: 44px;
}

.container {
  display: flex;
  flex-direction: column;
  padding: 20px;
  border-radius: 8px;
  margin: 0;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
  color: #323130;
  position: relative;
  overflow: hidden;
  
  &:hover {
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
    transform: translateY(-1px);
  }
  
  &:active {
    transform: translateY(0);
  }
}

.clickable {
  cursor: pointer;
}

// Modern priority styling with improved visual hierarchy
.critical {
  background: linear-gradient(135deg, #ffffff 0%, #fef9f9 100%);
  border: 1px solid #f3d6d8;
  border-left: 4px solid #d13438;
  
  .alertTitle {
    color: #d13438;
    font-weight: 600;
  }
  
  .priorityIndicator {
    background-color: #d13438;
  }
  
  &:hover {
    border-color: #e8bec0;
    box-shadow: 0 4px 16px rgba(209, 52, 56, 0.12);
  }
}

.high {
  background: linear-gradient(135deg, #ffffff 0%, #fffaf7 100%);
  border: 1px solid #f7e6d3;
  border-left: 4px solid #f7630c;
  
  .alertTitle {
    color: #f7630c;
    font-weight: 600;
  }
  
  .priorityIndicator {
    background-color: #f7630c;
  }
  
  &:hover {
    border-color: #f2d4b8;
    box-shadow: 0 4px 16px rgba(247, 99, 12, 0.12);
  }
}

.medium {
  background: linear-gradient(135deg, #ffffff 0%, #f8fcff 100%);
  border: 1px solid #d1e7f0;
  border-left: 4px solid #0078d4;
  
  .alertTitle {
    color: #0078d4;
    font-weight: 600;
  }
  
  .priorityIndicator {
    background-color: #0078d4;
  }
  
  &:hover {
    border-color: #b8d4e6;
    box-shadow: 0 4px 16px rgba(0, 120, 212, 0.12);
  }
}

.low {
  background: linear-gradient(135deg, #ffffff 0%, #f9fcf9 100%);
  border: 1px solid #d3e7d3;
  border-left: 4px solid #107c10;
  
  .alertTitle {
    color: #107c10;
    font-weight: 600;
  }
  
  .priorityIndicator {
    background-color: #107c10;
  }
  
  &:hover {
    border-color: #b8d4b8;
    box-shadow: 0 4px 16px rgba(16, 124, 16, 0.12);
  }
}

.pinned {
  position: sticky;
  top: 0;
  z-index: 10;
}

// Layout sections
.iconSection {
  flex-shrink: 0;
  margin-right: 16px;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
}

.alertIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 24px;
  height: 24px;
  
  // Ensure Fluent UI icons render
  svg {
    width: 24px;
    height: 24px;
    display: block;
  }
}

.textSection {
  flex: 1;
  min-width: 0;
}

.alertTitle {
  margin: 0 0 6px 0;
  font-weight: 600;
  font-size: 16px;
  line-height: 22px;
  letter-spacing: -0.01em;
}

.truncatedHtml {
  overflow: hidden;
  text-overflow: ellipsis;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  line-height: 1.4;
  color: rgba(50, 49, 48, 0.8);
  font-size: 14px;
}

.alertDescription {
  margin: 4px 0 0 0;
  max-width: 100%;
}

.actionSection {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  gap: 8px;
  margin-left: 16px;
  
  // Ensure button icons are visible
  :global(.fui-Button__icon) {
    font-size: 20px;
    width: 20px;
    height: 20px;
    display: inline-flex !important;
    align-items: center;
    justify-content: center;
    
    svg {
      width: 20px;
      height: 20px;
      display: block !important;
    }
  }
  
  // Alternative selector for Fluent UI v9 buttons
  :global([data-testid]) svg,
  :global(.fui-Button) svg {
    width: 20px;
    height: 20px;
    display: block !important;
  }
}

.carouselCounter {
  display: flex;
  align-items: center;
  padding: 0 8px;
  min-width: 60px;
  justify-content: center;
}

.divider {
  width: 1px;
  height: 24px;
  background-color: #d1d1d1;
  margin: 0 4px;
}


// Alert Content Styles
.alertContentContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spacingVerticalM);
  padding-top: var(--spacingVerticalM);
  border-top: 1px solid var(--colorNeutralStroke2);
}


// Description Content Styles
.descriptionParagraph {
  display: flex;
  flex-direction: column;
  gap: var(--spacingVerticalS);
}

.descriptionListContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spacingVerticalXS);
}

.descriptionListItem {
  display: flex;
  gap: var(--spacingHorizontalS);
  align-items: flex-start;
}

.descriptionBoldText {
  font-weight: var(--fontWeightSemibold);
}

.descriptionToggleButton {
  align-self: flex-start;
  margin-top: var(--spacingVerticalS);
}